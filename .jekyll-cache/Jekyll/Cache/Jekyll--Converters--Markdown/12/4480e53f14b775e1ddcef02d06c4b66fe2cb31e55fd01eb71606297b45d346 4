I"N*<p><img width="100%" alt="baekjoon13975" src="https://user-images.githubusercontent.com/17156386/77429165-98357000-6e1c-11ea-83bc-cc087180861f.png" /></p>

<p>크기가 다른 여러 파일들을 두 개씩 합쳐 한 개의 파일로 만들때 필요한 비용의 총 합을 계산하는 문제이다.
<br />이때, 두 파일을 합치는 비용은 두 파일 크기의 합이다.</p>

<ul>
  <li>합치는 순서는 상관 없으니 파일의 크기대로 정렬하여 작은것들부터 차례대로 합쳐준다.</li>
  <li>합쳐서 생성된 파일도 다시 파일 리스트에 넣고 최종적으로 하나만의 파일이 남도록 한다.</li>
  <li>파일을 합친 후 다시 리스트에 넣고 정렬을 한다면 너무 오래 걸린다.</li>
  <li>우선순위 큐를 사용하거나 덱을 사용하여 순서를 유지한다.</li>
  <li>리스트 순서 유지 연산 덱(1) vs 우선순위 큐 (nlogn)</li>
</ul>

<details>
<summary>덱을 이용한 방법</summary>
<div>
    <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;deque&gt;
#include &lt;algorithm&gt;
#define ll long long
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">ios_base</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">tc</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">tc</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">tc</span><span class="o">--</span><span class="p">){</span>
		<span class="kt">int</span> <span class="n">n</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="p">;</span>
		<span class="c1">// pages : 처음 상태의 파일의 크기들, file : 새로 생성된 파일들</span>
		<span class="n">deque</span><span class="o">&lt;</span><span class="n">ll</span><span class="o">&gt;</span> <span class="n">pages</span><span class="p">(</span><span class="n">n</span><span class="p">),</span><span class="n">file</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">pages</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
		<span class="n">sort</span><span class="p">(</span><span class="n">pages</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">pages</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
		<span class="n">ll</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="c1">// n개의 파일들을 하나로 만들기 위해서는 n-1번 파일을 합치면 된다.</span>
		<span class="k">for</span><span class="p">(</span><span class="n">ll</span> <span class="n">tmp</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="o">--</span><span class="n">n</span><span class="p">;</span><span class="n">tmp</span> <span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
			<span class="c1">// 현재 작은 크기의 파일 2개를 선정</span>
			<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
				<span class="k">if</span><span class="p">(</span><span class="n">pages</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">||</span> <span class="p">(</span><span class="n">file</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">file</span><span class="p">.</span><span class="n">front</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">pages</span><span class="p">.</span><span class="n">front</span><span class="p">())){</span>
					<span class="n">tmp</span> <span class="o">+=</span> <span class="n">file</span><span class="p">.</span><span class="n">front</span><span class="p">();</span>
					<span class="n">file</span><span class="p">.</span><span class="n">pop_front</span><span class="p">();</span>		
				<span class="p">}</span><span class="k">else</span><span class="p">{</span>
					<span class="n">tmp</span> <span class="o">+=</span> <span class="n">pages</span><span class="p">.</span><span class="n">front</span><span class="p">();</span>
					<span class="n">pages</span><span class="p">.</span><span class="n">pop_front</span><span class="p">();</span>
				<span class="p">}</span>
			<span class="p">}</span>
			<span class="n">ans</span> <span class="o">+=</span> <span class="n">tmp</span><span class="p">;</span>
			<span class="c1">// 새로 생성된 파일을 file 덱에 넣어준다.</span>
			<span class="n">file</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">tmp</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">ans</span><span class="o">&lt;&lt;</span><span class="sc">'\n'</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </div>
</details>

<details>
<summary>우선순위 큐를 이용한 방법</summary>
<div>
    <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;queue&gt;
#define ll long long
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">// 우선순위 큐의 정렬 조건</span>
<span class="k">struct</span> <span class="n">cmp</span><span class="p">{</span>
	<span class="kt">bool</span> <span class="k">operator</span><span class="p">()(</span><span class="n">ll</span> <span class="n">a</span><span class="p">,</span><span class="n">ll</span> <span class="n">b</span><span class="p">){</span>
		<span class="k">return</span> <span class="n">a</span><span class="o">&gt;</span><span class="n">b</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">ios_base</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">tc</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">tc</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">tc</span><span class="o">--</span><span class="p">){</span>
		<span class="kt">int</span> <span class="n">n</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="p">;</span>
		<span class="n">priority_queue</span><span class="o">&lt;</span><span class="n">ll</span><span class="p">,</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">ll</span><span class="o">&gt;</span><span class="p">,</span><span class="n">cmp</span><span class="o">&gt;</span> <span class="n">pages</span><span class="p">;</span>
		<span class="c1">// 처음 값을 입력 받을 때부터 정렬이 된다.</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
			<span class="n">ll</span> <span class="n">val</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">val</span><span class="p">;</span>
			<span class="n">pages</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">val</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="n">ll</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="c1">// n개의 파일을 합치는데 n-1번 걸린다</span>
		<span class="k">while</span><span class="p">(</span><span class="o">--</span><span class="n">n</span><span class="p">){</span>
			<span class="n">ll</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">pages</span><span class="p">.</span><span class="n">top</span><span class="p">();</span> <span class="n">pages</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
			<span class="n">tmp</span> <span class="o">+=</span> <span class="n">pages</span><span class="p">.</span><span class="n">top</span><span class="p">();</span> <span class="n">pages</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>	
			<span class="n">ans</span> <span class="o">+=</span> <span class="n">tmp</span><span class="p">;</span>
			<span class="n">pages</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">tmp</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">ans</span><span class="o">&lt;&lt;</span><span class="sc">'\n'</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </div>
</details>
:ET