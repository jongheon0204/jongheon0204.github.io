I"y<h3 id="투-포인터two-pointer">투 포인터(Two Pointer)</h3>
<blockquote>
  <p>포인터 두 개를 이용하여 배열을 효율적으로 탐색하는 방법</p>
</blockquote>

<h3 id="특징">특징</h3>
<ul>
  <li>n개로 이루어진 배열과 합이 x인 부분배열을 찾기 위한 용도로 주로 사용한다.</li>
  <li>배열을 탐색할 경우 두개의 포인터는 모두 한쪽 방향으로 움직인다.</li>
</ul>

<h3 id="example">Example</h3>
<div>
	<img width="100%" alt="two_pointer1" src="https://user-images.githubusercontent.com/17156386/74104042-3da9c280-4b94-11ea-99a0-c2303c5fad52.png" />
</div>
<p>두 포인터 사이에 존재하는 값들의 합이 x보다 작으면 오른쪽 포인터를 오른쪽으로 이동시키고, x값 보다 크면 왼쪽 포인터를 오른쪽으로 이동시켜 합을 검사한다.</p>

<h3 id="풀이방법">풀이방법</h3>

<ol>
  <li>왼쪽,오른쪽 포인터가 배열의 첫번째 인덱스를 나타내도록 한다.
    <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">r</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">r</span><span class="o">++</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>부분합의 값이 찾는 값보다 크다면 부분합이 찾는값 이하가 될때까지 왼쪽 포인터를 이동시켜 준후 찾는값과 비교한다.
    <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">while</span><span class="p">(</span><span class="n">sum</span> <span class="o">&gt;</span> <span class="n">m</span><span class="p">){</span>
 <span class="n">sum</span> <span class="o">-=</span> <span class="n">num</span><span class="p">[</span><span class="n">l</span><span class="p">];</span>
 <span class="n">l</span><span class="o">++</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">if</span><span class="p">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">m</span><span class="p">)</span><span class="n">ans</span><span class="o">++</span><span class="p">;</span>
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="문제">문제</h3>
<p><a href="https://www.acmicpc.net/problem/2003" target="_blank">백준 2003:수들의 합2</a></p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;vector&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">ios_base</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">n</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">ans</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">sum</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">n</span><span class="o">&gt;&gt;</span><span class="n">m</span><span class="p">;</span>
	<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">num</span><span class="p">(</span><span class="n">n</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">r</span><span class="o">&lt;</span><span class="n">n</span><span class="p">;</span><span class="n">r</span><span class="o">++</span><span class="p">){</span>
		<span class="c1">// 원소의 값을 하나씩 입력받으면서 검사</span>
		<span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">num</span><span class="p">[</span><span class="n">r</span><span class="p">];</span> <span class="n">sum</span><span class="o">+=</span><span class="n">num</span><span class="p">[</span><span class="n">r</span><span class="p">];</span>
		<span class="c1">// 부분합이 찾는값 보다 크다면 왼쪽 포인터를 이동시킨다.</span>
		<span class="k">while</span><span class="p">(</span><span class="n">sum</span> <span class="o">&gt;</span> <span class="n">m</span><span class="p">){</span>
			<span class="n">sum</span><span class="o">-=</span><span class="n">num</span><span class="p">[</span><span class="n">l</span><span class="p">];</span>
			<span class="n">l</span><span class="o">++</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="c1">// 부분합이 찾는값과 같다면 카운트 해준다.</span>
		<span class="k">if</span><span class="p">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">m</span><span class="p">)</span> <span class="n">ans</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">ans</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET