I"C&<h2 id="1-elexpression-language">1. EL(Expression Language)</h2>
<blockquote>
  <p>값을 표현하는데 사용되는 스크립트 언어</p>
</blockquote>

<h3 id="01-표현-방법">01. 표현 방법</h3>

<ul>
  <li>${expr}</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">$</span><span class="o">{</span><span class="n">pageContext</span><span class="o">.</span><span class="na">request</span><span class="o">.</span><span class="na">requestURI</span><span class="o">}</span> <span class="c1">// pageContext.getRequest() or pageContext.getRequestURI()</span>
<span class="err">$</span><span class="o">{</span><span class="n">requestScope</span><span class="o">.</span><span class="na">name</span><span class="o">}</span> <span class="c1">// request.getAttribute("name")</span>
</code></pre></div></div>

<h3 id="02-객체-접근-규칙">02. 객체 접근 규칙</h3>

<ul>
  <li>${&lt;표현 1&gt;.&lt;표현 2&gt;}
    <ul>
      <li>표현1 or 표현2가 NULL이면 NULL을 반환한다</li>
      <li>표현1이 Map일 경우 표현2는 Key</li>
      <li>표현1이 List일 경우 표현2는 Index값(정수만 가능, 정수가 아닐시 에러)</li>
    </ul>
  </li>
  <li>비교 연산자
    <ul>
      <li>${str == ‘값’} // str.compareTo(“값”)==0</li>
    </ul>
  </li>
  <li>empty 연산자
    <ul>
      <li>empty <값> // <값>이 비어있는 경우 true, 그 외의 경우 false</값></값></li>
    </ul>
  </li>
  <li>EL 비활성화
    <div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%@ page </span><span class="na">isElIgnored = </span><span class="s">"true"</span> <span class="nt">%&gt;</span> 
</code></pre></div>    </div>
    <ul>
      <li>Servlet 2.4 버전 이후부터는 EL이 기본적으로 사용되지만 2.4이전 버전은 EL이 무시된다</li>
    </ul>
  </li>
</ul>

<h3 id="03-실습">03. 실습</h3>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;%</span>
	<span class="n">pageContext</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"p"</span><span class="o">,</span><span class="s">"page scope value"</span><span class="o">);</span>
	<span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"r"</span><span class="o">,</span><span class="s">"request scope value"</span><span class="o">);</span>
<span class="nt">%&gt;</span>
<span class="nt">&lt;%=</span> <span class="n">pageContext</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"p"</span><span class="o">)</span> <span class="nt">%&gt;</span> <span class="nt">&lt;br&gt;</span>
${pageScope.p}<span class="nt">&lt;br&gt;</span>
<span class="nt">&lt;%=</span> <span class="n">request</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="s">"r"</span><span class="o">)</span> <span class="nt">%&gt;&lt;br&gt;</span>
${requestScope.r}

<span class="nt">&lt;%</span>
	<span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"k"</span><span class="o">,</span><span class="mi">10</span><span class="o">);</span>
	<span class="n">request</span><span class="o">.</span><span class="na">setAttribute</span><span class="o">(</span><span class="s">"m"</span><span class="o">,</span><span class="kc">true</span><span class="o">);</span>
<span class="nt">%&gt;</span>

k : ${k}, m : ${m}<span class="nt">&lt;br&gt;</span>
k / 5 : ${k div 5}<span class="nt">&lt;br&gt;</span>
!m : ${!m}
</code></pre></div></div>

<h2 id="2-jstljsp-standard-tag-library">2. JSTL(JSP Standard Tag Library)</h2>
<blockquote>
  <p>JSP에서 자바 코드를 html tag 형태로 작성할 수 있다.</p>
</blockquote>

<p><a href="http://tomcat.apache.org/download-taglibs.cgi" target="\_blank">jar파일 다운로드</a> 사이트에서 Impl, Spec, EL 3파일을 다운로드 받은 후 WEB-INF/lib 폴더에 복사후 사용이 가능하다</p>

<h3 id="01-코어-태그">01. 코어 태그</h3>

<ul>
  <li>변수 생성</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:set</span> <span class="na">var=</span><span class="s">"varName"</span> <span class="na">scope=</span><span class="s">"session"</span> <span class="na">value=</span><span class="s">"someValue"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;c:set</span> <span class="na">var=</span><span class="s">"varName"</span> <span class="na">scope=</span><span class="s">"application"</span><span class="nt">&gt;</span>
	someValue
<span class="nt">&lt;/c:set&gt;</span>
</code></pre></div></div>

<ul>
  <li>변수 제거</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:remove</span> <span class="na">var=</span><span class="s">"varName"</span> <span class="na">scope=</span><span class="s">"request"</span><span class="nt">/&gt;</span>
</code></pre></div></div>

<ul>
  <li>프로퍼티
    <ul>
      <li>some 객체가 자자빈일 경우 : some.setPropertyName(anyValue);</li>
      <li>some 객체가 맵(Map)일 경우 : some.put(propertyName, anyValue);</li>
    </ul>
  </li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:set</span> <span class="na">target=</span><span class="s">"${some}"</span> <span class="na">property=</span><span class="s">"propertyName"</span> <span class="na">value=</span><span class="s">"anyValue"</span><span class="nt">/&gt;</span>
</code></pre></div></div>

<ul>
  <li>조건문
    <ul>
      <li>else문은 존재하지 않는다</li>
      <li>switch, case문은 choose, when 태그로 사용이 가능하다</li>
    </ul>
  </li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:if</span> <span class="na">test = </span><span class="s">"조건"</span><span class="nt">&gt;</span> ... <span class="nt">&lt;/c:if&gt;</span>

<span class="nt">&lt;c:choose&gt;</span>
	<span class="nt">&lt;c:when</span> <span class="na">test = </span><span class="s">"조건1"</span><span class="nt">&gt;</span> ... <span class="nt">&lt;/c:when&gt;</span>
	<span class="nt">&lt;c:when</span> <span class="na">test = </span><span class="s">"조건2"</span><span class="nt">&gt;</span> ... <span class="nt">&lt;/c:when&gt;</span>
	<span class="nt">&lt;c:otherwise&gt;</span> ... <span class="nt">&lt;/c:otherwise&gt;</span>
<span class="nt">&lt;/c:choose&gt;</span>
</code></pre></div></div>

<ul>
  <li>반복문</li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:forEach</span> <span class="na">var = </span><span class="s">"변수"</span> <span class="na">items = </span><span class="s">"아이템"</span> <span class="na">[begin = </span><span class="s">"시작번호"</span><span class="err">]</span> <span class="na">[end = </span><span class="s">"끝번호"</span><span class="err">]</span><span class="nt">&gt;</span>
...
<span class="nt">&lt;/c:forEach&gt;</span>
</code></pre></div></div>

<ul>
  <li>import
    <ul>
      <li>URL에 연결하여 결과를 변수에 젖아한다</li>
      <li>웹 페이지를 연동할수 있다.</li>
    </ul>
  </li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:import</span> <span class="na">url=</span><span class="s">"URL"</span> <span class="na">charEncoding=</span><span class="s">"Encoding"</span> <span class="na">var=</span><span class="s">"변수명"</span> <span class="na">scope=</span><span class="s">"범위"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;c:param</span> <span class="na">name=</span><span class="s">"파라미터 이름"</span> <span class="na">value=</span><span class="s">"파라미터 값"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/c:import&gt;</span>
</code></pre></div></div>

<ul>
  <li>Redirect
    <ul>
      <li>Redirect시 전달할 파라미터를 태그안에 선언해줄 수 있다</li>
    </ul>
  </li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:redirect</span> <span class="na">url=</span><span class="s">"Redirect URL"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;c:param</span> <span class="na">name=</span><span class="s">"파라미터 이름"</span> <span class="na">value=</span><span class="s">"파라미터 값"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/c:redirect&gt;</span>
</code></pre></div></div>

<ul>
  <li>OUT
    <ul>
      <li>escapeXml의 값에 따라 문자로 출력할지 태그를 적용할지 정한다</li>
      <li>true : 문자로 출력, false : 태그로 적용</li>
    </ul>
  </li>
</ul>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;c:out</span> <span class="na">value=</span><span class="s">"value"</span> <span class="na">escapeXml=</span><span class="s">"{true|false}"</span> <span class="na">default=</span><span class="s">"defaultValue"</span> <span class="nt">/&gt;</span>
</code></pre></div></div>

<h3 id="02-실습">02. 실습</h3>

<div class="language-jsp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
:ET